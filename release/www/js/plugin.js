"use strict";angular.module("owsWalletPlugin",["gettext","ngLodash","owsWalletPluginClient","owsWalletPlugin.api","owsWalletPlugin.controllers","owsWalletPlugin.services"]),angular.module("owsWalletPlugin.api",[]),angular.module("owsWalletPlugin.controllers",[]),angular.module("owsWalletPlugin.services",[]),angular.module("owsWalletPlugin").config(function($pluginConfigProvider){$pluginConfigProvider.router.routes([{path:"/bitpay/invoices",method:"POST",handler:"createInvoice"}])}).run(function(bitpayService){owswallet.Plugin.ready(function(){})}),angular.module("owsWalletPlugin").run(["gettextCatalog",function(gettextCatalog){}]),angular.module("owsWalletPlugin.services").service("bitpayService",function($rootScope,pLog){var root={};return $rootScope.$on("$pre.beforeLeave",function(event,servlet){saveData()}),root.data={},root.getData=function(cb){cb=cb||function(){},session.get("data").then(function(value){cb(null,value)}).catch(function(error){pLog.error("Failed to read preferences: "+error.message+" ("+error.statusCode+")"),cb(error)})},root.saveData=function(){session.set("data",data),session.flush()},root}),angular.module("owsWalletPlugin.api").service("createInvoice",function(lodash,Http,Session,System){var root={},REQUIRED_PARAMS=["config.api.url","config.api.auth.token","data.price","data.currency"];return root.respond=function(message,callback){var missing=System.checkRequired(REQUIRED_PARAMS,message.request.data);if(missing.length>0)return message.response={statusCode:400,statusText:"The request does not include "+missing.toString()+".",data:{}},callback(message);var pluginConfig=message.request.data.config,config={headers:{"Content-Type":"application/json","x-accept-version":"2.0.0"}},data=message.request.data.data;data.token=pluginConfig.api.auth.token,data.guid=Http.guid(),new Http(pluginConfig.api.url,config).post("invoices/",data).then(function(response){if(response.data.error)throw new Error(response.data.error);return message.response={statusCode:200,statusText:"OK",data:response.data.data},callback(message)}).catch(function(error){return message.response={statusCode:400,statusText:error.message||error,data:{}},callback(message)})},root});